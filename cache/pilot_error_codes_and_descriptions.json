{
    "1008": "The GENERALERROR is a fallback error used when a more specific error condition cannot be determined. It signifies that a general, unspecified problem occurred during job execution, typically warranting a review of system logs or batch output for diagnosis. This code serves as a catch-all and is often associated with infrastructure or pilot-level failures that don't clearly map to other predefined issues.",
    "1098": "The NOLOCALSPACE error is triggered when the pilot detects that there isn't enough available disk space on the local worker node to perform necessary job actions, such as staging in input files or running the payload. It can cause job initialization to fail early or lead to issues during file operations. It reflects a critical local resource limitation that needs to be resolved either by cleaning up temporary files or adjusting site configurations.",
    "1099": "The STAGEINFAILED error is set when the pilot fails to successfully copy required input files from remote storage to the local execution environment. This could be due to network errors, unavailable replicas, permission issues, or misconfigured data endpoints. It plays a vital role in the file transfer subsystem of the pilot, ensuring that the job has all required data before execution can begin.",
    "1100": "The REPLICANOTFOUND error is issued when the pilot cannot locate a replica of a required input file. This is typically the result of missing data in the distributed storage system, possibly due to failed transfers, deletion, or catalog inconsistencies. It's closely related to stage-in operations and signals a data availability issue that may need intervention at the storage or catalog level.",
    "1103": "The NOSUCHFILE error indicates that an expected file\u2014either input, output, or intermediate\u2014could not be found at the specified path during execution. It often points to misconfiguration, failed earlier steps (like staging in), or bugs in the payload logic that reference non-existent files. It helps differentiate between file transfer failures and logical errors related to file handling.",
    "1104": "This error indicates that the working directory for a user job has exceeded allowed limits, often due to excessive intermediate data or unregulated output generation. It serves as a protective mechanism against jobs consuming excessive local disk, which could interfere with system stability or other concurrent jobs.",
    "1106": "Triggered when the standard output (stdout) or the log files from a payload become too large, this error protects against uncontrolled logging or verbose output that could overwhelm storage systems or make diagnostics unmanageable. It's a safeguard to maintain system efficiency and storage hygiene.",
    "1110": "This error is raised when the pilot encounters an issue while setting up the payload environment. This can include missing software dependencies, misconfigured runtime environments, or script execution failures before the payload even begins. It is distinct from runtime or logic errors inside the payload and is rooted in environment preparation.",
    "1115": "The NFSSQLITE error reflects a known problem with using SQLite databases over NFS-mounted filesystems, where locking can fail due to NFS limitations. This error helps flag jobs where site configurations might violate SQLite\u2019s operational constraints, prompting a switch to local storage or alternate database handling.",
    "1116": "This error occurs when the pilot is unable to download the queuedata configuration for a site, which includes job-specific settings and environment details. Since queuedata is critical for job execution, failure to retrieve it typically halts the job early in the pilot lifecycle.",
    "1117": "Even if queuedata is retrieved, this error indicates that its contents are malformed, inconsistent, or fail internal validation checks. It implies a problem with the job definition or with the site\u2019s queuedata provisioning service, and prevents the pilot from proceeding.",
    "1124": "Set when the size of an output file exceeds predefined limits, this error protects storage systems from overflows and enforces quotas. It often signals a need for tighter control of payload output or better job-level file size estimation.",
    "1133": "Indicates that no valid storage endpoint is defined or accessible for output files. This could result from missing configuration, disabled storage services, or lack of appropriate protocols. It prevents the pilot from completing file stage-out operations and delivering results.",
    "1137": "This error is raised when the pilot fails to copy one or more output files to remote storage. It may be due to transfer failures, authentication issues, timeouts, or network unavailability. It's critical for job post-processing and data integrity.",
    "1141": "Triggered when the computed MD5 checksum of an output file does not match the expected value after stage-out. This highlights data corruption, either in memory, during file write, or in transmission, and prompts retransfer or investigation.",
    "1143": "The CHMODTRF error is raised when the pilot fails to change file permissions (typically using chmod) on a payload transform script. This could occur due to restricted filesystem permissions or user privileges and can prevent execution of the job script entirely.",
    "1144": "The PANDAKILL error indicates that the PanDA server explicitly instructed the pilot to terminate the job. This is typically due to administrative decisions, job cancellations, or preemptive resource reallocation, and not a failure of the pilot or payload.",
    "1145": "This error is triggered when the MD5 checksum of an input file downloaded to the worker node does not match the expected value. This typically indicates data corruption during transfer or on disk, and it serves to maintain data integrity before job execution begins.",
    "1149": "This error signifies that the transform (job execution) script could not be downloaded to the worker node. This failure might stem from network issues, invalid URLs, or permission errors, and typically blocks job execution before it begins.",
    "1150": "The LOOPINGJOB error is used to detect and handle payloads that appear to be 'looping' \u2014 meaning they are running without producing any output for an extended time. This is a typical symptom of jobs that are stuck in an infinite loop or have stalled in a way that is not immediately fatal but effectively unproductive.",
    "1151": "Used when file transfer operations during the stage-in phase (i.e., moving input files to the node) exceed a configured time limit. This timeout error suggests persistent network latency or unresponsive storage endpoints, and is critical for diagnosing site performance.",
    "1152": "Analogous to STAGEINTIMEOUT, but for the stage-out phase when output files are being transferred off the node. A timeout here can jeopardize data delivery and lead to incomplete or lost job results, often requiring retry mechanisms.",
    "1163": "This error appears when the pilot is unable to detect or validate a grid proxy, which is required for secure authentication to remote services. It may result from expired credentials, misconfigured environments, or missing certificates, and prevents job submission or data access.",
    "1165": "This error is used when the pilot expects to find a specific output file after payload execution, but it is missing. This could be due to application-level failures, misconfigured output paths, or logic errors in the payload, and leads to the job being marked as incomplete.",
    "1168": "Raised when the total size of input or output files exceeds site or job-level limits, this error helps enforce data volume constraints and prevents potential disk space exhaustion. It can occur pre- or post-execution depending on whether the payload generated excessive output.",
    "1171": "Triggered when the Adler-32 checksum of an input file does not match the expected value, GETADMISMATCH indicates data integrity problems. This is a variant of the checksum validation logic and is used when Adler-32 is the preferred checksum type for transfers.",
    "1172": "Raised when the Adler-32 checksum of an output file after transfer does not match the original. This suggests possible data corruption during the stage-out process and helps ensure that results delivered to storage match what was generated locally.",
    "1177": "Indicates that the VOMS (Virtual Organization Membership Service) proxy is missing or invalid. Since VOMS proxies are essential for grid authorization, this error blocks job execution or data transfer until valid credentials are obtained or refreshed.",
    "1180": "Represents a low-level system error encountered while using the Globus toolkit to perform stage-in operations. This may involve protocol failures, misconfigurations, or endpoint unavailability in Globus-based data transfers.",
    "1181": "Analogous to GETGLOBUSSYSERR, this error marks a Globus-related failure during the stage-out phase. It typically reflects infrastructure or configuration issues that prevent output delivery via the Globus service.",
    "1186": "Occurs when the pilot cannot locate the expected software directory for the job. This directory usually contains experiment-specific libraries and tools needed for payload execution. Its absence suggests a site misconfiguration or improper environment setup.",
    "1187": "This error is used when metadata from the payload execution\u2014such as output file declarations or job state\u2014is missing. It implies that the payload either failed prematurely or didn't generate required bookkeeping information, which affects job tracking and result validation.",
    "1190": "Raised when a logical file name (LFN) exceeds length limits (commonly 255 characters). Overly long LFNs can cause failures in file registration or naming conflicts on certain filesystems, and this error enforces naming constraints.",
    "1191": "This error occurs when an output or input file has a size of zero bytes, which is often indicative of a failed operation, misdirected file handling, or aborted payloads. It helps detect incomplete or invalid data products.",
    "1199": "Represents a failure in directory creation, typically during initialization or file staging. The underlying causes could be permission issues, invalid paths, or exhausted inodes, and it prevents the pilot from setting up necessary job structures.",
    "1200": "This generic error signals that a job was terminated by a kill signal that wasn't clearly mapped to a known source (e.g., SIGTERM, SIGKILL). It's used when the pilot detects termination but cannot conclusively identify the cause or origin.",
    "1201": "Indicates that the job received a SIGTERM signal (termination request). This signal is typically sent to gracefully stop a process, often by the batch system or the pilot itself. It allows the payload to perform clean-up before exiting.",
    "1202": "This error denotes that the payload was terminated using the SIGQUIT signal, which not only stops the process but may also generate a core dump. It\u2019s often used to diagnose severe issues in the application by preserving its state at failure.",
    "1203": "Signifies that the job encountered a segmentation fault (SIGSEGV), usually due to an invalid memory access. This is a low-level crash in the payload and may indicate bugs such as dereferencing null or corrupted pointers.",
    "1204": "Issued when the job is terminated by the SIGXCPU signal, which happens when it exceeds the allowed CPU time quota. It reflects a resource policy enforcement by the batch system or operating system.",
    "1205": "Reserved for cases where the job was explicitly terminated by a user request. Though not currently in active use by the pilot, this error code is designated to distinguish human intervention from automated or system-triggered terminations.",
    "1206": "Triggered when the job is killed by a SIGBUS signal, which generally results from invalid memory access related to misaligned or inaccessible memory addresses. It\u2019s a hardware-level exception often due to malformed data or filesystem I/O issues.",
    "1207": "Raised when the job is terminated by the SIGUSR1 signal, which is a user-defined signal. In Pilot context, this is often used for internal signaling, such as memory monitoring, and may indicate job preemption or monitoring-triggered termination.",
    "1208": "Indicates that the job received a SIGINT (interrupt) signal, commonly sent when a user or script wants to interrupt a running process, such as through Ctrl+C. It usually reflects an external user or automated intervention.",
    "1211": "This error denotes that a required software installation (e.g., experiment-specific libraries or runtime environment) is missing from the site. It prevents job execution due to the unavailability of necessary payload components.",
    "1212": "Indicates that the payload process consumed more memory than was available or allowed and was terminated by the system. It helps identify memory-intensive jobs that exceed site or job memory limits and require optimization or special handling.",
    "1213": "Raised when the job exceeds its maximum allowed wall time, as set by the batch system or pilot configuration. This timeout ensures fair resource sharing and prevents runaway processes from monopolizing compute resources.",
    "1220": "The UNKNOWNPAYLOADFAILURE error is used when a payload fails for reasons that cannot be identified or classified by the pilot. It acts as a catch-all for unexpected or obscure failures and signals the need to inspect job logs for further diagnostics.",
    "1221": "Indicates that a file operation failed because the file already exists at the destination. This is common during stage-in, stage-out, or setup procedures and helps avoid accidental overwrites or redundant data duplication.",
    "1223": "This error originates from a memory allocation failure (`std::bad_alloc` in C++), often due to insufficient system memory. It implies that the payload or transform requested more memory than the system could provide, leading to a hard crash or abort.",
    "1224": "This is a recoverable error related to the Event Service (ES), used when a temporary issue (e.g., network glitch, transient resource failure) interrupts ES operations. It allows retry mechanisms or job recovery to be initiated.",
    "1228": "A fatal error in the Event Service that cannot be recovered from. It leads to job termination and indicates deeper issues in the ES infrastructure or irrecoverable failures during event processing.",
    "1234": "This error shows that a clone of a job has already been executed, and this instance should not run again. It's used for job deduplication and helps avoid resource waste in high-throughput, replicated execution environments.",
    "1235": "Raised when the payload consumes more memory than the maximum threshold allowed by site or job configuration. It helps enforce resource constraints and prevent system instability due to overconsumption.",
    "1236": "Used when the PanDA server explicitly fails or cancels the job. This may be due to internal errors, site policies, or administrative actions. It helps distinguish server-originated terminations from pilot-side failures.",
    "1238": "Triggered when the Event Service fails to provide any events for processing. This error halts job progress and typically indicates coordination or scheduling issues in the event delivery pipeline.",
    "1240": "This error is raised when the pilot encounters problems decoding or acting on a message sent from the payload, typically in an event-driven job. It may indicate malformed messages, protocol mismatches, or logic errors in the event loop.",
    "1242": "Signifies that a requested checksum operation could not be performed because the underlying system or storage endpoint does not support the specified checksum algorithm. It usually affects data integrity validation during file transfers.",
    "1244": "Used when the pilot cannot locate any suitable software release for the job. This could be due to a missing or outdated release catalog, misconfigured queue, or errors in version resolution logic.",
    "1246": "This error indicates that the pilot failed to download the user-specific tarball containing the job\u2019s execution environment or user code from the PanDA server. It's a critical setup failure that blocks job initialization.",
    "1247": "Triggered when the pilot encounters malformed XML, typically in configuration files, job definitions, or metadata. This prevents parsing and further processing and usually requires fixing upstream formatting or schema issues.",
    "1300": "Indicates that a requested class, method, or feature is not implemented in the current pilot version. This error can appear in development branches or when calling abstract interfaces unintentionally.",
    "1301": "A catch-all for any unhandled exceptions caught by the pilot. It signals unexpected runtime behavior, and its presence suggests that the code may need improved exception handling or deeper diagnostics.",
    "1302": "Occurs when the pilot fails to convert an object or data structure to the required format (e.g., JSON serialization, dictionary mapping). It's often associated with misformatted input or schema mismatches.",
    "1303": "Used when file operations such as reading, writing, copying, or removing files fail due to I/O errors, permission issues, or invalid paths. It helps isolate operational problems with local or remote file systems.",
    "1305": "Raised when the pilot is unable to successfully launch or monitor the payload process. This includes command resolution errors, execution permissions, and runtime failures that don't map to specific signals.",
    "1306": "Generic failure related to Singularity or Apptainer container operations. It covers errors that do not fall into more specific container-related categories, including permission issues and command errors.",
    "1307": "Occurs when no loopback devices are available for Singularity/Apptainer to mount container images. This often reflects a system-level constraint and may require administrative intervention or job deferral.",
    "1308": "Indicates that a bind mount point requested by the pilot (e.g., for staging files) was not successfully mounted inside the container. This may result from misconfigured paths, permission issues, or container misbehavior.",
    "1309": "Triggered when the Singularity/Apptainer engine fails to mount a container image. This error typically reflects corrupted images, missing drivers, or unsupported formats, and prevents containerized execution.",
    "1310": "Raised when the pilot catches a runtime exception while attempting to execute the payload. This error captures exceptions that occur after the payload is launched, but before it completes, often due to faulty execution logic or unexpected runtime conditions.",
    "1311": "A generic placeholder error indicating that a required variable, configuration, or option was not defined. It can be used during early initialization when mandatory settings are missing.",
    "1312": "This error is used when two lists or data structures expected to be the same length (e.g., file lists, checksums) do not match in size, which typically signals inconsistent job inputs or corrupted metadata.",
    "1313": "Indicates that the storage endpoint lacks a defined protocol for data access or transfer (e.g., no `srm`, `gsiftp`, `https` available). This prevents file staging operations and suggests a site configuration issue.",
    "1314": "Used when the pilot encounters a checksum type it doesn't recognize (e.g., something other than `adler32` or `md5`). It helps prevent invalid checksum comparisons and encourages standardization of data integrity methods.",
    "1315": "A fallback error used when a transform (payload step) fails for an unknown or undiagnosed reason. It helps catch non-specific or misclassified transform errors and encourages log inspection.",
    "1316": "Triggered when the Rucio data management service is down or unreachable. This halts any operations that depend on metadata retrieval or file replication services and may require retries or fallback behavior.",
    "1317": "Set when a process or component (e.g., job readiness check, data staging) waits longer than the allowed threshold. This error helps enforce timeouts for robustness and responsiveness.",
    "1318": "This error denotes a failure in communication between the pilot and the PanDA server. Causes include network issues, expired credentials, or server outages, and it prevents job updates and result submission.",
    "1319": "A catch-all for unexpected internal errors in the pilot software. These could include unhandled exceptions, state mismatches, or logic flaws, and signal the need for pilot debugging or reporting.",
    "1320": "Indicates that the pilot could not create or write to the log file. Causes could be permission errors, full disks, or invalid file paths. This error compromises traceability and job diagnosis.",
    "1321": "Set when the pilot fails to obtain client location metadata from Rucio, which is required for optimal file placement or job routing. This could stem from misconfiguration or unavailable geolocation services.",
    "1322": "Triggered when the pilot fails to retrieve file replicas from Rucio. Without this data, input files cannot be staged, making job execution impossible. This reflects service or catalog issues.",
    "1323": "Used when the pilot encounters a reference to a file transfer tool it doesn\u2019t recognize or support. This might indicate a misconfigured job or site, and prevents file staging operations.",
    "1324": "This error occurs when a required external service (such as a metadata catalog, file transfer endpoint, or job control interface) is temporarily unavailable or unresponsive. Jobs encountering this error are often eligible for retries, as the condition is expected to be transient.",
    "1325": "Used when the pilot determines that the Singularity runtime is not available on the node. This blocks containerized job execution and may require fallback mechanisms or site reconfiguration.",
    "1326": "Raised when the pilot or Rucio cannot find any replicas of an input file at any storage element. This typically signals data loss, delayed replication, or catalog inconsistencies. Without valid replicas, the job cannot proceed, and the condition often requires human intervention or reprocessing.",
    "1327": "Indicates that the pilot cannot reach the remote storage or service endpoint over the network during a stage-in attempt. This may stem from firewall blocks, DNS resolution failures, or temporary network segmentation. The error differentiates network-level issues from protocol or authentication failures.",
    "1328": "Used when the payload process terminates with a segmentation fault (SIGSEGV). This is often caused by illegal memory access, such as dereferencing null or invalid pointers. The pilot distinguishes this signal to help identify programming errors or compatibility issues in the job software.",
    "1329": "Triggered when the pilot is unable to generate a proper SURL (Storage URL) for a non-deterministic DDM endpoint. Non-deterministic sites require external metadata to locate files, and failure here implies either missing information or unsupported configuration, often requiring CRIC updates or site corrections.",
    "1330": "This error indicates that the pilot timed out while attempting to retrieve JSON-based configuration or data files (e.g., job definitions, metadata). Causes may include slow networks, unresponsive servers, or large payloads. It prevents the pilot from continuing due to incomplete job context.",
    "1331": "Raised when the input file expected in the Storage Element (SE) is not found. This differs from replica discovery failures in that it targets known, requested data that cannot be located or accessed, suggesting catalog mismatches, stale links, or early file deletions.",
    "1332": "Refers to a condition where jobs consistently fail on a particular site or resource due to misconfiguration, data corruption, or systemic failure. The pilot sets this code when it suspects it has landed in a 'black hole' \u2014 a site consuming jobs but not producing useful results.",
    "1333": "Triggered when there is no remaining space at the remote storage destination to stage out files. This is critical for job completion and output delivery and can result from exhausted quotas, temporary unavailability, or misreported free space.",
    "1334": "Indicates a severe error occurred during the job setup phase that prevents execution from starting. This includes missing software, script misconfiguration, or environment conflicts. It is considered unrecoverable without user or site intervention.",
    "1335": "Raised when the user's application code or tarball is not found on the PanDA server. This may be due to upload failure, incorrect references in the job definition, or premature task submission. The user typically needs to re-upload or recreate the task with updated metadata.",
    "1336": "Used when the pilot detects that a job with the same ID is already running elsewhere. This may happen due to scheduler duplication, retries on stale records, or site miscommunication. The pilot aborts to avoid concurrent processing of the same workload.",
    "1337": "Occurs when the memory monitoring tool used during payload execution produces malformed or unreadable JSON output. This may suggest a failure in the monitoring tool itself or resource constraints during job execution. It affects post-job diagnostics and memory-related decisions.",
    "1338": "This error is triggered when the pilot fails to authenticate with a storage endpoint during the stage-in process. It typically results from expired credentials, invalid tokens, misconfigured proxies, or site access control settings. Without successful authentication, input files cannot be retrieved, and the job cannot begin.",
    "1339": "Raised when the local handling of the DBRelease (a package containing detector-specific database snapshots for ATLAS) fails. This error may occur during setup, download, or unpacking stages, and often indicates misconfigured environment paths or corrupt tarballs.",
    "1340": "Used when Singularity or Apptainer fails to invoke the runtime with a new user namespace. This can happen on systems with restricted user namespace support, missing kernel features, or limited container capabilities, and results in the inability to isolate or sandbox the payload execution properly.",
    "1341": "This error reflects a misconfiguration in the job queue or site definition\u2014such as missing environment variables, misdeclared software releases, or invalid data paths. It may prevent job matching or proper job initialization and often needs correction in the CRIC or site config.",
    "1342": "Raised when the pilot fails to import a required middleware component or Python module, typically during early setup. This could be due to a missing installation, version mismatch, or environment conflict, and typically blocks any job activity dependent on that module.",
    "1343": "This error is set when the pilot cannot find any declared output files in the job report produced by the payload. This may indicate that the payload ran incorrectly, failed silently, or failed to generate the expected metadata, making downstream processing impossible.",
    "1344": "Indicates that a required system resource\u2014such as memory, CPU, file handles, or temporary storage\u2014was not available at the time of use. This may result from local system constraints, limits, or overload conditions. The pilot halts the job to avoid further degradation or failure.",
    "1345": "This error is raised when Singularity or Apptainer fails to create a user namespace for container isolation. This failure can arise from kernel security policies or improper installation of the container runtime, and it blocks job execution inside a secure sandbox.",
    "1346": "Used when the pilot cannot locate the main transform (execution script or binary) for the job. This can be due to an incorrectly specified path, missing user code, or errors during tarball unpacking. Without the transform, the job cannot be launched.",
    "1347": "Indicates that the pilot or payload is running on Scientific Linux 5 (SL5), which is no longer supported due to outdated libraries, missing kernel features, or incompatibility with modern job requirements. It prompts site administrators to upgrade the OS to ensure compatibility.",
    "1348": "Represents a resource-related failure during container execution, specifically within the Singularity or Apptainer runtime. This could involve memory exhaustion, locked devices, or unavailable loop mounts, and suggests system-level limitations affecting containerized jobs.",
    "1349": "This error is raised when the transform script (TRF) receives arguments that it does not recognize or support. This could result from syntax errors, misconfigured job parameters, or incorrect job definitions. It prevents the transform from initializing properly and often requires user-level debugging or task redefinition.",
    "1350": "Set when the pilot detects that an output file is present but has zero size. This suggests that the payload ran but failed to generate any meaningful content, which might be due to runtime crashes, incorrect output paths, or silent failures in the application logic.",
    "1351": "This error is triggered when the transform produces stderr output that contains a fatal error message not recognized by the pilot\u2019s known error patterns. It helps catch unknown failure modes or misformatted error signals that might otherwise go undiagnosed.",
    "1352": "Raised when the pilot fails to access or read system `/proc` files (e.g., `/proc/<pid>/stat`) required to measure CPU usage. This error may result from permissions issues, missing processes, or unexpected system configurations, affecting resource monitoring and reporting.",
    "1353": "Indicates that the pilot attempted to query information from a process that no longer exists. This may happen if the payload terminates unexpectedly before resource usage can be assessed. It distinguishes process-level termination from pilot errors.",
    "1354": "This error signifies a general failure during CPU consumption calculations, beyond specific causes like missing files or processes. It may reflect unexpected system behavior or internal pilot logic errors during post-processing.",
    "1355": "Indicates that a core dump file was generated, typically due to a segmentation fault or low-level crash in the payload. The pilot flags this condition to alert operators to potential memory access violations or corrupt binaries, often requiring in-depth debugging.",
    "1356": "This error is raised when a pre-processing step fails. Pre-processing typically includes environment setup, validation checks, or sandbox preparation before the main payload starts. Failure here blocks job execution and requires review of early-stage scripts or configs.",
    "1357": "Used when post-processing commands fail after the payload has completed. This may include log gathering, file registration, or cleanup tasks. Although the main computation may be complete, the failure can impact job reporting or data delivery.",
    "1358": "Set when the pilot cannot find a software release in an unpacked container environment. This suggests issues with how the container was prepared or mounted, and prevents the job from finding the expected libraries or binaries needed to run.",
    "1359": "This error is used when a PanDA queue is marked inactive (e.g., for maintenance, migration, or misconfiguration), and the pilot attempts to launch a job from it. It informs the pilot to defer execution and retry later or reroute the job elsewhere.",
    "1360": "Triggered when a required container image cannot be found locally or remotely. This blocks containerized job execution and typically results from misnamed images, missing files, or registration issues in the image repository.",
    "1361": "Set when the pilot is unable to open a remote file (e.g., via `xrdcp`, HTTP, or gridFTP). Causes may include permission errors, file nonexistence, or transient storage unavailability. This error impacts stage-in, stage-out, or monitoring tasks that rely on remote access.",
    "1362": "Represents a failure during file transfer using `xrdcp`, a common tool for data movement in grid environments. This could be due to connectivity issues, timeouts, or endpoint misbehavior. The pilot logs this error to distinguish transport-layer failures from application errors.",
    "1363": "This code is not a failure but a directive\u2014used when the pilot receives an explicit instruction from the Raythena controller (or other orchestration logic) to terminate a running payload. It's part of active job control mechanisms for preemptive termination, such as canceling duplicated or low-priority tasks.",
    "1364": "Raised when the pilot attempts to perform an S3 or similar storage transfer operation but cannot locate the required credentials. This may stem from missing tokens, improperly propagated security contexts, or misconfigured environment variables, and prevents data staging operations.",
    "1365": "Triggered when the Python `ctypes` module is not available on the worker node. Since `ctypes` is used for interacting with low-level system libraries, its absence limits pilot functionality and may break key operations, especially those involving hardware queries or process control.",
    "1366": "Indicates a failure in computing a checksum for a file, either due to I/O errors, unreadable data, or missing utilities. Checksum calculation is vital for data integrity verification, and this error halts jobs to prevent data corruption from going undetected.",
    "1367": "Used when a shell or subprocess command launched by the pilot exceeds its time limit and is forcibly terminated. This helps detect stuck processes or infinite loops and is commonly associated with poorly behaving transforms or network-bound tools.",
    "1368": "Set when an attempt to open a remote file (e.g., via HTTP, S3, or xrootd) fails due to timeout. This error signals that the file is potentially available but access is too slow or blocked, which may indicate storage latency or firewall issues.",
    "1369": "This error pertains to failures in accessing Frontier, a distributed database access system used by ATLAS and others. Errors here might reflect proxy misconfigurations, expired certificates, or blocked endpoints, and they compromise conditions data retrieval.",
    "1370": "Used as a proactive warning when the VOMS proxy used by the pilot is nearing expiration. Rather than fail outright, the pilot can respond by refreshing credentials or terminating gracefully. It's an internal signal for credential lifecycle management.",
    "1371": "Raised when an output file name contains illegal or unsupported characters (e.g., spaces, special symbols, or overly long names). This is important for compatibility with various filesystems and storage services, which may reject or mishandle such names.",
    "1372": "Used when the pilot determines that the Apptainer runtime is not available on the node. This error helps distinguish between unsupported container environments and guides appropriate fallback strategies.",
    "1373": "Occurs when the pilot detects that its grid certificate has expired. This blocks secure operations such as file transfers, job submission, and monitoring. It typically requires users or site managers to refresh credentials before jobs can proceed.",
    "1374": "This error indicates that a dictionary or mapping used to reference remote files (such as in a file catalog or metadata store) could not be found or accessed. It may reflect stale metadata, missing entries, or errors in job preparation that prevent the pilot from resolving file locations.",
    "1375": "Represents the expiration of a lease period during which the job was allowed to run. This is used in controlled or resource-shared environments to reclaim jobs after their designated window has passed. It results in job termination and may require retrying with an extended lease.",
    "1376": "Raised when the pilot is unable to create the job log file within a reasonable time. This may happen due to filesystem issues, locked resources, or I/O delays. Since logging is essential for job diagnosis, this error halts execution to avoid running blind.",
    "1377": "Indicates that the CVMFS (CERN Virtual Machine File System) is not responding. CVMFS provides software and data to the grid; if it's down or unreachable, jobs may not be able to locate or run the required applications, leading to early failure.",
    "1378": "This error occurs when the `lsetup` command, which is used to configure the ATLAS software environment, does not complete within a set timeout. This can prevent job startup and may point to site-specific configuration delays or software server issues.",
    "1379": "Set when the job is forcefully terminated by the resource manager (e.g., Kubernetes, SLURM) due to preemption. This is not an error in the job itself, but a scheduling decision to reclaim resources for higher-priority tasks.",
    "1380": "Indicates a general failure in invoking or using `arcproxy`, a tool used to manage grid credentials. This might involve missing binaries, misconfigured paths, or unexpected tool behavior that blocks further authentication steps.",
    "1381": "A more specific form of ARCPROXYFAILURE, this error signals that the pilot could not load required shared libraries when trying to use `arcproxy`. It typically means library paths are broken or incompatible with the current environment.",
    "1382": "Triggered when the grid proxy has too little time remaining on its validity clock. Even if technically valid, a short proxy can be inadequate for long jobs or transfers, and the pilot prevents such jobs from starting to avoid mid-execution failure.",
    "1383": "Occurs when the pilot cannot authenticate with the remote storage system during the stage-out phase. This prevents output delivery and often reflects expired tokens, missing certificates, or misconfigured access rules.",
    "1384": "This error indicates that the current job queue is not configured to support container-based execution, despite a job requiring it. This can happen if container runtime support (e.g., Singularity, Apptainer) is disabled or missing at the site."
}